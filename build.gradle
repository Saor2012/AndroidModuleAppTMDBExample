// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        supportVersion = '1.0.0'
        materialVersion = '1.2.0-alpha03'
        appcompat ='1.1.0'
        roomVersinon = '2.2.3'
        daggerVersion = '2.25.2'
        timberVersion = '4.7.1'
        okHttpVersion = '4.2.0'
        work_version = '2.2.0'
        lifecycle_version = '1.1.1'
        retrofitVersion = '2.6.2'
        qrCodeVersion = '3.6.0'
        retrofitVersion = '2.3.0'
        kotlin_version ='1.3.50'


        support = [
                appcompat       : "androidx.appcompat:appcompat:${appcompat}",
                design        : "com.google.android.material:material:${materialVersion}",
                support : "androidx.legacy:legacy-support-v4:${supportVersion}",
                annotation : "androidx.annotation:annotation:${supportVersion}",
                recyclerview    : "androidx.recyclerview:recyclerview:${supportVersion}",
                cardview        : "androidx.cardview:cardview:${supportVersion}",
                constraint         : 'androidx.constraintlayout:constraintlayout:1.1.3']
        room = [
                roomRuntime : "androidx.room:room-runtime:${roomVersinon}",
                roomRxjava2 : "androidx.room:room-rxjava2:${roomVersinon}",
                roomCompiler: "androidx.room:room-compiler:${roomVersinon}",
                roomGuava   : "androidx.room:room-guava:${roomVersinon}"]

        dagger = [
                daggerCore      : "com.google.dagger:dagger:${daggerVersion}",
                daggerAndroid   : "com.google.dagger:dagger-android:${daggerVersion}",
                daggerCompiler  : "com.google.dagger:dagger-compiler:${daggerVersion}",
                androidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
                androidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}"]
        worker = [
                runtime: "androidx.work:work-runtime:${work_version}",
                rxjava2:"androidx.work:work-rxjava2:${work_version}",
                ktx:"androidx.work:work-runtime-ktx:${work_version}"]

        loggerTim = [timber: "com.jakewharton.timber:timber:${timberVersion}"]

        okHttp = [
                loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
                okhttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}"]
        retrofit = [
                retrofit:"com.squareup.retrofit2:retrofit:${retrofitVersion}",
                rxjava2:"com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
                gson:"com.squareup.retrofit2:converter-gson:${retrofitVersion}"]
        rxjava = [
                rxjava   : 'io.reactivex.rxjava2:rxjava:2.2.8',
                rxandroid: 'io.reactivex.rxjava2:rxandroid:2.1.1']
        qrCode = [
                zxing: "com.journeyapps:zxing-android-embedded:${qrCodeVersion}"]
        gson = [
                gson                : 'com.google.code.gson:gson:2.8.5',
                autoValue           : 'com.google.auto.value:auto-value:1.6.5',
                autoValueAnnotations: 'com.jakewharton.auto.value:auto-value-annotations:1.5']
        test = [
                junit       : 'junit:junit:4.13-beta-3',
                testRunner  : 'androidx.test:runner:1.2.0',
                testEspresso: 'androidx.test.espresso:espresso-core:3.2.0',
                jsr305:'com.google.code.findbugs:jsr305:1.3.9',
                testAnnotationProcessorDagger: "com.google.dagger:dagger-compiler:${daggerVersion}",
                androidTestAnnotationProcessorDagger:"com.google.dagger:dagger-compiler:${daggerVersion}",
                testWorker:"androidx.work:work-testing:${work_version}"]
        kotlin = [
                kotlin:"org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}",
                ktx:'androidx.core:core-ktx:1.1.0'
        ]
        rxpermissions = [permissions: 'com.github.tbruyelle:rxpermissions:0.10.2']

    }
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
